let gameSpeed=1;const BLUE={r:103,g:215,b:240},GREEN={r:166,g:224,b:44},PINK={r:250,g:36,b:115},ORANGE={r:254,g:149,b:34},allColors=[BLUE,GREEN,PINK,ORANGE],getSpawnDelay=()=>{const e=1400-3.1*state.game.cubeCount;return Math.max(e,550)},doubleStrongEnableScore=2e3,slowmoThreshold=10,strongThreshold=25,spinnerThreshold=25;let pointerIsDown=!1,pointerScreen={x:0,y:0},pointerScene={x:0,y:0};const minPointerSpeed=60,hitDampening=.1,backboardZ=-400,shadowColor="#262e36",airDrag=.022,gravity=.3,sparkColor="rgba(170,221,255,.9)",sparkThickness=2.2,airDragSpark=.1,touchTrailColor="rgba(170,221,255,.62)",touchTrailThickness=7,touchPointLife=120,touchPoints=[],targetRadius=40,targetHitRadius=50,makeTargetGlueColor=e=>"rgb(170,221,255)",fragRadius=targetRadius/3,canvas=document.querySelector("#c"),cameraDistance=900,sceneScale=1,cameraFadeStartZ=.45*cameraDistance,cameraFadeEndZ=.65*cameraDistance,cameraFadeRange=cameraFadeEndZ-cameraFadeStartZ,allVertices=[],allPolys=[],allShadowVertices=[],allShadowPolys=[],GAME_MODE_RANKED=Symbol("GAME_MODE_RANKED"),GAME_MODE_CASUAL=Symbol("GAME_MODE_CASUAL"),MENU_MAIN=Symbol("MENU_MAIN"),MENU_PAUSE=Symbol("MENU_PAUSE"),MENU_SCORE=Symbol("MENU_SCORE"),state={game:{mode:GAME_MODE_RANKED,time:0,score:0,cubeCount:0},menus:{active:MENU_MAIN}},isInGame=()=>!state.menus.active,isMenuVisible=()=>!!state.menus.active,isCasualGame=()=>state.game.mode===GAME_MODE_CASUAL,isPaused=()=>state.menus.active===MENU_PAUSE,highScoreKey="__menja__highScore",getHighScore=()=>{const e=localStorage.getItem(highScoreKey);return e?parseInt(e,10):0};let _lastHighscore=getHighScore();const setHighScore=e=>{_lastHighscore=getHighScore(),localStorage.setItem(highScoreKey,String(e))},isNewHighScore=()=>state.game.score>_lastHighscore,invariant=(e,t)=>{if(!e)throw new Error(t)},$=e=>document.querySelector(e),handleClick=(e,t)=>e.addEventListener("click",t),handlePointerDown=(e,t)=>{e.addEventListener("touchstart",t),e.addEventListener("mousedown",t)},formatNumber=e=>e.toLocaleString(),PI=Math.PI,TAU=2*Math.PI,ETA=.5*Math.PI,clamp=(e,t,a)=>Math.min(Math.max(e,t),a),lerp=(e,t,a)=>(t-e)*a+e,random=(e,t)=>Math.random()*(t-e)+e,randomInt=(e,t)=>(Math.random()*(t-e+1)|0)+e,pickOne=e=>e[Math.random()*e.length|0],colorToHex=e=>"#"+(0|e.r).toString(16).padStart(2,"0")+(0|e.g).toString(16).padStart(2,"0")+(0|e.b).toString(16).padStart(2,"0"),shadeColor=(e,t)=>{let a,o;return t<.5?(a=0,o=1-2*t):(a=255,o=2*t-1),"#"+(0|lerp(e.r,a,o)).toString(16).padStart(2,"0")+(0|lerp(e.g,a,o)).toString(16).padStart(2,"0")+(0|lerp(e.b,a,o)).toString(16).padStart(2,"0")},_allCooldowns=[],makeCooldown=(e,t=1)=>{let a=0,o=0;const r={rechargeTime:e,units:t},n=()=>((()=>{const e=state.game.time;e<o?a=0:(a-=e-o)<0&&(a=0),o=e})(),a<=e*(t-1)),s={canUse:n,useIfAble(){const t=n();return t&&(a+=e),t},mutate(o){o.rechargeTime&&((a-=e-o.rechargeTime)<0&&(a=0),e=o.rechargeTime),o.units&&(t=o.units)},reset(){a=0,o=0,this.mutate(r)}};return _allCooldowns.push(s),s},resetAllCooldowns=()=>_allCooldowns.forEach(e=>e.reset()),makeSpawner=({chance:e,cooldownPerSpawn:t,maxSpawns:a})=>{const o=makeCooldown(t,a);return{shouldSpawn:()=>Math.random()<=e&&o.useIfAble(),mutate(t){t.chance&&(e=t.chance),o.mutate({rechargeTime:t.cooldownPerSpawn,units:t.maxSpawns})}}},normalize=e=>{const t=Math.hypot(e.x,e.y,e.z);return{x:e.x/t,y:e.y/t,z:e.z/t}},add=e=>t=>e+t,scaleVector=e=>t=>{t.x*=e,t.y*=e,t.z*=e};function cloneVertices(e){return e.map(e=>({x:e.x,y:e.y,z:e.z}))}function copyVerticesTo(e,t){const a=e.length;for(let o=0;o<a;o++){const a=e[o],r=t[o];r.x=a.x,r.y=a.y,r.z=a.z}}function computeTriMiddle(e){const t=e.vertices;e.middle.x=(t[0].x+t[1].x+t[2].x)/3,e.middle.y=(t[0].y+t[1].y+t[2].y)/3,e.middle.z=(t[0].z+t[1].z+t[2].z)/3}function computeQuadMiddle(e){const t=e.vertices;e.middle.x=(t[0].x+t[1].x+t[2].x+t[3].x)/4,e.middle.y=(t[0].y+t[1].y+t[2].y+t[3].y)/4,e.middle.z=(t[0].z+t[1].z+t[2].z+t[3].z)/4}function computePolyMiddle(e){3===e.vertices.length?computeTriMiddle(e):computeQuadMiddle(e)}function computePolyDepth(e){computePolyMiddle(e);const t=e.middle.x,a=e.middle.y,o=e.middle.z-cameraDistance;e.depth=Math.hypot(t,a,o)}function computePolyNormal(e,t){const a=e.vertices[0],o=e.vertices[1],r=e.vertices[2],n=a.x-o.x,s=a.y-o.y,i=a.z-o.z,l=a.x-r.x,c=a.y-r.y,d=a.z-r.z,h=s*d-i*c,m=i*l-n*d,u=n*c-s*l,p=Math.hypot(h,m,u),y=e[t];y.x=h/p,y.y=m/p,y.z=u/p}function transformVertices(e,t,a,o,r,n,s,i,l,c,d){const h=Math.sin(n),m=Math.cos(n),u=Math.sin(s),p=Math.cos(s),y=Math.sin(i),g=Math.cos(i);e.forEach((e,n)=>{const s=t[n],i=e.x,x=e.z*h+e.y*m,S=e.z*m-e.y*h,f=i*p-S*u,w=f*g-x*y,D=f*y+x*g,E=i*u+S*p;s.x=w*l+a,s.y=D*c+o,s.z=E*d+r})}const projectVertex=e=>{const t=1*cameraDistance/(cameraDistance-e.z);e.x=e.x*t,e.y=e.y*t},projectVertexTo=(e,t)=>{const a=1*cameraDistance/(cameraDistance-e.z);t.x=e.x*a,t.y=e.y*a},PERF_START=()=>{},PERF_END=()=>{},PERF_UPDATE=()=>{};function makeCubeModel({scale:e=1}){return{vertices:[{x:-e,y:-e,z:e},{x:e,y:-e,z:e},{x:e,y:e,z:e},{x:-e,y:e,z:e},{x:-e,y:-e,z:-e},{x:e,y:-e,z:-e},{x:e,y:e,z:-e},{x:-e,y:e,z:-e}],polys:[{vIndexes:[0,1,2,3]},{vIndexes:[7,6,5,4]},{vIndexes:[3,2,6,7]},{vIndexes:[4,5,1,0]},{vIndexes:[5,6,2,1]},{vIndexes:[0,3,7,4]}]}}function makeRecursiveCubeModel({recursionLevel:e,splitFn:t,color:a,scale:o=1}){const r=e=>1/3**e;let n=[{x:0,y:0,z:0}];for(let a=1;a<=e;a++){const e=2*r(a),o=[];n.forEach(a=>{o.push(...t(a,e))}),n=o}const s={vertices:[],polys:[]},i=makeCubeModel({scale:1});i.vertices.forEach(scaleVector(r(e)));r(e);return n.forEach((e,t)=>{Math.max(Math.abs(e.x),Math.abs(e.y),Math.abs(e.z));s.vertices.push(...i.vertices.map(t=>({x:(t.x+e.x)*o,y:(t.y+e.y)*o,z:(t.z+e.z)*o}))),s.polys.push(...i.polys.map(e=>({vIndexes:e.vIndexes.map(add(8*t))})))}),s}function mengerSpongeSplit(e,t){return[{x:e.x+t,y:e.y-t,z:e.z+t},{x:e.x+t,y:e.y-t,z:e.z+0},{x:e.x+t,y:e.y-t,z:e.z-t},{x:e.x+0,y:e.y-t,z:e.z+t},{x:e.x+0,y:e.y-t,z:e.z-t},{x:e.x-t,y:e.y-t,z:e.z+t},{x:e.x-t,y:e.y-t,z:e.z+0},{x:e.x-t,y:e.y-t,z:e.z-t},{x:e.x+t,y:e.y+t,z:e.z+t},{x:e.x+t,y:e.y+t,z:e.z+0},{x:e.x+t,y:e.y+t,z:e.z-t},{x:e.x+0,y:e.y+t,z:e.z+t},{x:e.x+0,y:e.y+t,z:e.z-t},{x:e.x-t,y:e.y+t,z:e.z+t},{x:e.x-t,y:e.y+t,z:e.z+0},{x:e.x-t,y:e.y+t,z:e.z-t},{x:e.x+t,y:e.y+0,z:e.z+t},{x:e.x+t,y:e.y+0,z:e.z-t},{x:e.x-t,y:e.y+0,z:e.z+t},{x:e.x-t,y:e.y+0,z:e.z-t}]}function optimizeModel(e,t=1e-4){const{vertices:a,polys:o}=e,r=(e,a)=>Math.abs(e.x-a.x)<t&&Math.abs(e.y-a.y)<t&&Math.abs(e.z-a.z)<t,n=(e,t)=>{const a=e.vIndexes,o=t.vIndexes;return!(a[0]!==o[0]&&a[0]!==o[1]&&a[0]!==o[2]&&a[0]!==o[3]||a[1]!==o[0]&&a[1]!==o[1]&&a[1]!==o[2]&&a[1]!==o[3]||a[2]!==o[0]&&a[2]!==o[1]&&a[2]!==o[2]&&a[2]!==o[3]||a[3]!==o[0]&&a[3]!==o[1]&&a[3]!==o[2]&&a[3]!==o[3])};a.forEach((e,t)=>{e.originalIndexes=[t]});for(let e=a.length-1;e>=0;e--)for(let t=e-1;t>=0;t--){const o=a[e],n=a[t];if(r(o,n)){a.splice(e,1),n.originalIndexes.push(...o.originalIndexes);break}}a.forEach((e,t)=>{o.forEach(a=>{a.vIndexes.forEach((a,o,r)=>{e.originalIndexes.includes(a)&&(r[o]=t)})})}),o.forEach(e=>{const t=e.vIndexes;e.sum=t[0]+t[1]+t[2]+t[3]}),o.sort((e,t)=>t.sum-e.sum);for(let e=o.length-1;e>=0;e--)for(let t=e-1;t>=0;t--){const a=o[e],r=o[t];if(a.sum!==r.sum)break;if(n(a,r)){o.splice(e,1),o.splice(t,1),e--;break}}return e}class Entity{constructor({model:e,color:t,wireframe:a=!1}){const o=cloneVertices(e.vertices),r=cloneVertices(e.vertices),n=colorToHex(t),s=shadeColor(t,.4),i=e.polys.map(e=>({vertices:e.vIndexes.map(e=>o[e]),color:t,wireframe:a,strokeWidth:a?2:0,strokeColor:n,strokeColorDark:s,depth:0,middle:{x:0,y:0,z:0},normalWorld:{x:0,y:0,z:0},normalCamera:{x:0,y:0,z:0}})),l=e.polys.map(e=>({vertices:e.vIndexes.map(e=>r[e]),wireframe:a,normalWorld:{x:0,y:0,z:0}}));this.projected={},this.model=e,this.vertices=o,this.polys=i,this.shadowVertices=r,this.shadowPolys=l,this.reset()}reset(){this.x=0,this.y=0,this.z=0,this.xD=0,this.yD=0,this.zD=0,this.rotateX=0,this.rotateY=0,this.rotateZ=0,this.rotateXD=0,this.rotateYD=0,this.rotateZD=0,this.scaleX=1,this.scaleY=1,this.scaleZ=1,this.projected.x=0,this.projected.y=0}transform(){transformVertices(this.model.vertices,this.vertices,this.x,this.y,this.z,this.rotateX,this.rotateY,this.rotateZ,this.scaleX,this.scaleY,this.scaleZ),copyVerticesTo(this.vertices,this.shadowVertices)}project(){projectVertexTo(this,this.projected)}}const targets=[],targetPool=new Map(allColors.map(e=>[e,[]])),targetWireframePool=new Map(allColors.map(e=>[e,[]])),getTarget=(()=>{const e=makeSpawner({chance:.5,cooldownPerSpawn:1e4,maxSpawns:1});let t=!1;const a=makeSpawner({chance:.3,cooldownPerSpawn:12e3,maxSpawns:1}),o=makeSpawner({chance:.1,cooldownPerSpawn:1e4,maxSpawns:1}),r=[["x","y"],["y","z"],["z","x"]];return function(){t&&state.game.score<=2e3?t=!1:!t&&state.game.score>2e3&&(t=!0,a.mutate({maxSpawns:2}));let n=pickOne([BLUE,GREEN,ORANGE]),s=!1,i=1;const l=state.game.cubeCount>=25&&isInGame()&&o.shouldSpawn();state.game.cubeCount>=10&&e.shouldSpawn()?(n=BLUE,s=!0):state.game.cubeCount>=25&&a.shouldSpawn()&&(n=PINK,i=3);const c=function(e,t){let a=(t?targetWireframePool:targetPool).get(e).pop();return a||((a=new Entity({model:optimizeModel(makeRecursiveCubeModel({recursionLevel:1,splitFn:mengerSpongeSplit,scale:targetRadius})),color:e,wireframe:t})).color=e,a.wireframe=t,a.hit=!1,a.maxHealth=0,a.health=0),a}(n,s);c.hit=!1,c.maxHealth=3,c.health=i,updateTargetHealth(c,0);const d=[.1*Math.random()-.05,.1*Math.random()-.05];l&&(d[0]=-.25,d[1]=0,c.rotateZ=random(0,TAU));const h=pickOne(r);return d.forEach((e,t)=>{switch(h[t]){case"x":c.rotateXD=e;break;case"y":c.rotateYD=e;break;case"z":c.rotateZD=e}}),c}})(),updateTargetHealth=(e,t)=>{if(e.health+=t,!e.wireframe){const t=e.health-1,a="rgb(170,221,255)";for(let o of e.polys)o.strokeWidth=t,o.strokeColor=a}},returnTarget=e=>{e.reset(),(e.wireframe?targetWireframePool:targetPool).get(e.color).push(e)};function resetAllTargets(){for(;targets.length;)returnTarget(targets.pop())}const frags=[],fragPool=new Map(allColors.map(e=>[e,[]])),fragWireframePool=new Map(allColors.map(e=>[e,[]])),createBurst=(()=>{const e=mengerSpongeSplit({x:0,y:0,z:0},2*fragRadius),t=cloneVertices(e),a=cloneVertices(e),o=cloneVertices(e),r=e.map(normalize),n=cloneVertices(r),s=e.length;function i(e){let t=(e.wireframe?fragWireframePool:fragPool).get(e.color).pop();return t||((t=new Entity({model:makeCubeModel({scale:fragRadius}),color:e.color,wireframe:e.wireframe})).color=e.color,t.wireframe=e.wireframe),t}return(l,c=1)=>{transformVertices(e,t,l.x,l.y,l.z,l.rotateX,l.rotateY,l.rotateZ,1,1,1),transformVertices(e,a,l.x-l.xD,l.y-l.yD,l.z-l.zD,l.rotateX-l.rotateXD,l.rotateY-l.rotateYD,l.rotateZ-l.rotateZD,1,1,1);for(let e=0;e<s;e++){const r=t[e],n=a[e],s=o[e];s.x=r.x-n.x,s.y=r.y-n.y,s.z=r.z-n.z}transformVertices(r,n,0,0,0,l.rotateX,l.rotateY,l.rotateZ,1,1,1);for(let e=0;e<s;e++){const a=t[e],r=o[e],s=n[e],d=i(l);d.x=a.x,d.y=a.y,d.z=a.z,d.rotateX=l.rotateX,d.rotateY=l.rotateY,d.rotateZ=l.rotateZ;const h=2*c,m=2*c,u=.015;d.xD=r.x+s.x*h+Math.random()*m,d.yD=r.y+s.y*h+Math.random()*m,d.zD=r.z+s.z*h+Math.random()*m,d.rotateXD=d.xD*u,d.rotateYD=d.yD*u,d.rotateZD=d.zD*u,frags.push(d)}}})(),returnFrag=e=>{e.reset(),(e.wireframe?fragWireframePool:fragPool).get(e.color).push(e)},sparks=[],sparkPool=[];function addSpark(e,t,a,o){const r=sparkPool.pop()||{};return r.x=e+.5*a,r.y=t+.5*o,r.xD=a,r.yD=o,r.life=random(200,300),r.maxLife=r.life,sparks.push(r),r}function sparkBurst(e,t,a,o){const r=TAU/a;for(let n=0;n<a;n++){const a=n*r+r*Math.random(),s=(1-Math.random()**3)*o;addSpark(e,t,Math.sin(a)*s,Math.cos(a)*s)}}let glueShedVertices;function glueShedSparks(e){glueShedVertices?copyVerticesTo(e.vertices,glueShedVertices):glueShedVertices=cloneVertices(e.vertices),glueShedVertices.forEach(e=>{Math.random()<.4&&(projectVertex(e),addSpark(e.x,e.y,random(-12,12),random(-12,12)))})}function returnSpark(e){sparkPool.push(e)}const hudContainerNode=$(".hud");function setHudVisibility(e){hudContainerNode.style.display=e?"block":"none"}const scoreNode=$(".score-lbl"),cubeCountNode=$(".cube-count-lbl");function renderScoreHud(){isCasualGame()?(scoreNode.style.display="none",cubeCountNode.style.opacity=1):(scoreNode.innerText=`SCORE: ${state.game.score}`,scoreNode.style.display="block",cubeCountNode.style.opacity=.65),cubeCountNode.innerText=`CUBES SMASHED: ${state.game.cubeCount}`}renderScoreHud(),handlePointerDown($(".pause-btn"),()=>pauseGame());const slowmoNode=$(".slowmo"),slowmoBarNode=$(".slowmo__bar");function renderSlowmoStatus(e){slowmoNode.style.opacity=0===e?0:1,slowmoBarNode.style.transform=`scaleX(${e.toFixed(3)})`}const menuContainerNode=$(".menus"),menuMainNode=$(".menu--main"),menuPauseNode=$(".menu--pause"),menuScoreNode=$(".menu--score"),finalScoreLblNode=$(".final-score-lbl"),highScoreLblNode=$(".high-score-lbl");function showMenu(e){e.classList.add("active")}function hideMenu(e){e.classList.remove("active")}function renderMenus(){switch(hideMenu(menuMainNode),hideMenu(menuPauseNode),hideMenu(menuScoreNode),state.menus.active){case MENU_MAIN:showMenu(menuMainNode);break;case MENU_PAUSE:showMenu(menuPauseNode);break;case MENU_SCORE:finalScoreLblNode.textContent=formatNumber(state.game.score),isNewHighScore()?highScoreLblNode.textContent="New High Score!":highScoreLblNode.textContent=`High Score: ${formatNumber(getHighScore())}`,showMenu(menuScoreNode)}setHudVisibility(!isMenuVisible()),menuContainerNode.classList.toggle("has-active",isMenuVisible()),menuContainerNode.classList.toggle("interactive-mode",isMenuVisible()&&pointerIsDown)}function setActiveMenu(e){state.menus.active=e,renderMenus()}function setScore(e){state.game.score=e,renderScoreHud()}function incrementScore(e){isInGame()&&(state.game.score+=e,state.game.score<0&&(state.game.score=0),renderScoreHud())}function setCubeCount(e){state.game.cubeCount=e,renderScoreHud()}function incrementCubeCount(e){isInGame()&&(state.game.cubeCount+=e,renderScoreHud())}function setGameMode(e){state.game.mode=e}function resetGame(){resetAllTargets(),state.game.time=0,resetAllCooldowns(),setScore(0),setCubeCount(0),spawnTime=getSpawnDelay()}function pauseGame(){isInGame()&&setActiveMenu(MENU_PAUSE)}function resumeGame(){isPaused()&&setActiveMenu(null)}function endGame(){handleCanvasPointerUp(),isNewHighScore()&&setHighScore(state.game.score),setActiveMenu(MENU_SCORE)}renderMenus(),handleClick($(".play-normal-btn"),()=>{setGameMode(GAME_MODE_RANKED),setActiveMenu(null),resetGame()}),handleClick($(".play-casual-btn"),()=>{setGameMode(GAME_MODE_CASUAL),setActiveMenu(null),resetGame()}),handleClick($(".resume-btn"),()=>resumeGame()),handleClick($(".menu-btn--pause"),()=>setActiveMenu(MENU_MAIN)),handleClick($(".play-again-btn"),()=>{setActiveMenu(null),resetGame()}),handleClick($(".menu-btn--score"),()=>setActiveMenu(MENU_MAIN)),handleClick($(".play-normal-btn"),()=>{setGameMode(GAME_MODE_RANKED),setActiveMenu(null),resetGame()}),handleClick($(".play-casual-btn"),()=>{setGameMode(GAME_MODE_CASUAL),setActiveMenu(null),resetGame()}),handleClick($(".resume-btn"),()=>resumeGame()),handleClick($(".menu-btn--pause"),()=>setActiveMenu(MENU_MAIN)),handleClick($(".play-again-btn"),()=>{setActiveMenu(null),resetGame()}),handleClick($(".menu-btn--score"),()=>setActiveMenu(MENU_MAIN)),window.addEventListener("keydown",e=>{"p"===e.key&&(isPaused()?resumeGame():pauseGame())});let spawnTime=0;const maxSpawnX=450,pointerDelta={x:0,y:0},pointerDeltaScaled={x:0,y:0},slowmoDuration=1500;let slowmoRemaining=0,spawnExtra=0;const spawnExtraDelay=300;let targetSpeed=1;function tick(e,t,a,o,r){if(PERF_START("frame"),PERF_START("tick"),state.game.time+=a,slowmoRemaining>0)(slowmoRemaining-=a)<0&&(slowmoRemaining=0),targetSpeed=pointerIsDown?.075:.3;else{const e=isMenuVisible()&&pointerIsDown;targetSpeed=e?.025:1}renderSlowmoStatus(slowmoRemaining/slowmoDuration),gameSpeed=clamp(gameSpeed+=(targetSpeed-gameSpeed)/22*r,0,1);const n=e/2,s=t/2,i=1-airDrag*o,l=1-airDragSpark*o,c=1/(.75*o+.25);pointerDelta.x=0,pointerDelta.y=0,pointerDeltaScaled.x=0,pointerDeltaScaled.y=0;const d=touchPoints[touchPoints.length-1];pointerIsDown&&d&&!d.touchBreak&&(pointerDelta.x=pointerScene.x-d.x,pointerDelta.y=pointerScene.y-d.y,pointerDeltaScaled.x=pointerDelta.x*c,pointerDeltaScaled.y=pointerDelta.y*c);const h=Math.hypot(pointerDelta.x,pointerDelta.y),m=h*c;for(touchPoints.forEach(e=>e.life-=a),pointerIsDown&&touchPoints.push({x:pointerScene.x,y:pointerScene.y,life:touchPointLife});touchPoints[0]&&touchPoints[0].life<=0;)touchPoints.shift();if(PERF_START("entities"),(spawnTime-=a)<=0){spawnExtra>0?(spawnExtra--,spawnTime=spawnExtraDelay):spawnTime=getSpawnDelay();const e=getTarget(),t=Math.min(.8*n,maxSpawnX);e.x=Math.random()*t*2-t,e.y=s+2*targetHitRadius,e.z=Math.random()*targetRadius*2-targetRadius,e.xD=Math.random()*(-2*e.x/120),e.yD=-20,targets.push(e)}const u=-n+targetRadius,p=n-targetRadius,y=-s-120;e:for(let e=targets.length-1;e>=0;e--){const t=targets[e];if(t.x+=t.xD*o,t.y+=t.yD*o,t.y<y&&(t.y=y,t.yD=0),t.x<u?(t.x=u,t.xD*=-.4):t.x>p&&(t.x=p,t.xD*=-.4),t.z<backboardZ&&(t.z=backboardZ,t.zD*=-.4),t.yD+=gravity*o,t.rotateX+=t.rotateXD*o,t.rotateY+=t.rotateYD*o,t.rotateZ+=t.rotateZD*o,t.transform(),t.project(),t.y>s+2*targetHitRadius){targets.splice(e,1),returnTarget(t),isInGame()&&(isCasualGame()?incrementScore(-25):endGame());continue}const a=Math.ceil(h/targetRadius*2);for(let o=1;o<=a;o++){const r=1-o/a,n=pointerScene.x-pointerDelta.x*r,s=pointerScene.y-pointerDelta.y*r;if(Math.hypot(n-t.projected.x,s-t.projected.y)<=targetHitRadius){if(!t.hit){t.hit=!0,t.xD+=pointerDeltaScaled.x*hitDampening,t.yD+=pointerDeltaScaled.y*hitDampening,t.rotateXD+=.001*pointerDeltaScaled.y,t.rotateYD+=.001*pointerDeltaScaled.x;const a=7+.125*m;m>minPointerSpeed?(t.health--,incrementScore(10),t.health<=0?(incrementCubeCount(1),createBurst(t,c),sparkBurst(n,s,8,a),t.wireframe&&(slowmoRemaining=slowmoDuration,spawnTime=0,spawnExtra=2),targets.splice(e,1),returnTarget(t)):(sparkBurst(n,s,8,a),glueShedSparks(t),updateTargetHealth(t,0))):(incrementScore(5),sparkBurst(n,s,3,a))}continue e}}t.hit=!1}const g=backboardZ+fragRadius,x=-e,S=e;for(let e=frags.length-1;e>=0;e--){const t=frags[e];t.x+=t.xD*o,t.y+=t.yD*o,t.z+=t.zD*o,t.xD*=i,t.yD*=i,t.zD*=i,t.y<y&&(t.y=y,t.yD=0),t.z<g&&(t.z=g,t.zD*=-.4),t.yD+=gravity*o,t.rotateX+=t.rotateXD*o,t.rotateY+=t.rotateYD*o,t.rotateZ+=t.rotateZD*o,t.transform(),t.project(),(t.projected.y>s+targetHitRadius||t.projected.x<x||t.projected.x>S||t.z>cameraFadeEndZ)&&(frags.splice(e,1),returnFrag(t))}for(let e=sparks.length-1;e>=0;e--){const t=sparks[e];t.life-=a,t.life<=0?(sparks.splice(e,1),returnSpark(t)):(t.x+=t.xD*o,t.y+=t.yD*o,t.xD*=l,t.yD*=l,t.yD+=gravity*o)}PERF_END("entities"),PERF_START("3D"),allVertices.length=0,allPolys.length=0,allShadowVertices.length=0,allShadowPolys.length=0,targets.forEach(e=>{allVertices.push(...e.vertices),allPolys.push(...e.polys),allShadowVertices.push(...e.shadowVertices),allShadowPolys.push(...e.shadowPolys)}),frags.forEach(e=>{allVertices.push(...e.vertices),allPolys.push(...e.polys),allShadowVertices.push(...e.shadowVertices),allShadowPolys.push(...e.shadowPolys)}),allPolys.forEach(e=>computePolyNormal(e,"normalWorld")),allPolys.forEach(computePolyDepth),allPolys.sort((e,t)=>t.depth-e.depth),allVertices.forEach(projectVertex),allPolys.forEach(e=>computePolyNormal(e,"normalCamera")),PERF_END("3D"),PERF_START("shadows"),transformVertices(allShadowVertices,allShadowVertices,0,0,0,TAU/8,0,0,1,1,1),allShadowPolys.forEach(e=>computePolyNormal(e,"normalWorld"));const f=Math.hypot(1,1),w=allShadowVertices.length;for(let e=0;e<w;e++){const t=allVertices[e].z-backboardZ;allShadowVertices[e].z-=f*t}transformVertices(allShadowVertices,allShadowVertices,0,0,0,-TAU/8,0,0,1,1,1),allShadowVertices.forEach(projectVertex),PERF_END("shadows"),PERF_END("tick")}function draw(e,t,a,o){PERF_START("draw");e.lineJoin="bevel",PERF_START("drawShadows"),e.fillStyle=shadowColor,e.strokeStyle=shadowColor,allShadowPolys.forEach(t=>{if(t.wireframe){e.lineWidth=2,e.beginPath();const{vertices:a}=t,o=a.length,r=a[0];e.moveTo(r.x,r.y);for(let t=1;t<o;t++){const o=a[t];e.lineTo(o.x,o.y)}e.closePath(),e.stroke()}else{e.beginPath();const{vertices:a}=t,o=a.length,r=a[0];e.moveTo(r.x,r.y);for(let t=1;t<o;t++){const o=a[t];e.lineTo(o.x,o.y)}e.closePath(),e.fill()}}),PERF_END("drawShadows"),PERF_START("drawPolys"),allPolys.forEach(t=>{if(!t.wireframe&&t.normalCamera.z<0)return;0!==t.strokeWidth&&(e.lineWidth=t.normalCamera.z<0?.5*t.strokeWidth:t.strokeWidth,e.strokeStyle=t.normalCamera.z<0?t.strokeColorDark:t.strokeColor);const{vertices:a}=t,o=a[a.length-1],r=t.middle.z>cameraFadeStartZ;if(!t.wireframe){const a=.5*t.normalWorld.y+-.5*t.normalWorld.z,o=a>0?.1:(a**32-a)/2*.9+.1;e.fillStyle=shadeColor(t.color,o)}r&&(e.globalAlpha=Math.max(0,1-(t.middle.z-cameraFadeStartZ)/cameraFadeRange)),e.beginPath(),e.moveTo(o.x,o.y);for(let t of a)e.lineTo(t.x,t.y);t.wireframe||e.fill(),0!==t.strokeWidth&&e.stroke(),r&&(e.globalAlpha=1)}),PERF_END("drawPolys"),PERF_START("draw2D"),e.strokeStyle=sparkColor,e.lineWidth=sparkThickness,e.beginPath(),sparks.forEach(t=>{e.moveTo(t.x,t.y);const a=(t.life/t.maxLife)**.5*1.5;e.lineTo(t.x-t.xD*a,t.y-t.yD*a)}),e.stroke(),e.strokeStyle=touchTrailColor;const r=touchPoints.length;for(let t=1;t<r;t++){const a=touchPoints[t],o=touchPoints[t-1];if(a.touchBreak||o.touchBreak)continue;const r=a.life/touchPointLife;e.lineWidth=r*touchTrailThickness,e.beginPath(),e.moveTo(o.x,o.y),e.lineTo(a.x,a.y),e.stroke()}PERF_END("draw2D"),PERF_END("draw"),PERF_END("frame"),PERF_UPDATE()}function setupCanvases(){const e=canvas.getContext("2d"),t=window.devicePixelRatio||1;let a,o,r;function n(){const e=window.innerWidth,n=window.innerHeight;o=e/(a=n/1e3),r=n/a,canvas.width=e*t,canvas.height=n*t,canvas.style.width=e+"px",canvas.style.height=n+"px"}n(),window.addEventListener("resize",n);let s=0;function i(n){let i=n-s;if(s=n,l(),isPaused())return;i<0?i=17:i>68&&(i=68);const c=o/2,d=r/2;pointerScene.x=pointerScreen.x/a-c,pointerScene.y=pointerScreen.y/a-d;const h=i/16.6667;tick(o,r,gameSpeed*i,gameSpeed*h,h),e.clearRect(0,0,canvas.width,canvas.height);const m=t*a;e.scale(m,m),e.translate(c,d),draw(e,o,r,a),e.setTransform(1,0,0,1,0,0)}const l=()=>requestAnimationFrame(i);l()}function handleCanvasPointerDown(e,t){pointerIsDown||(pointerIsDown=!0,pointerScreen.x=e,pointerScreen.y=t,isMenuVisible()&&renderMenus())}function handleCanvasPointerUp(){pointerIsDown&&(pointerIsDown=!1,touchPoints.push({touchBreak:!0,life:touchPointLife}),isMenuVisible()&&renderMenus())}function handleCanvasPointerMove(e,t){pointerIsDown&&(pointerScreen.x=e,pointerScreen.y=t)}if("PointerEvent"in window)canvas.addEventListener("pointerdown",e=>{e.isPrimary&&handleCanvasPointerDown(e.clientX,e.clientY)}),canvas.addEventListener("pointerup",e=>{e.isPrimary&&handleCanvasPointerUp()}),canvas.addEventListener("pointermove",e=>{e.isPrimary&&handleCanvasPointerMove(e.clientX,e.clientY)}),document.body.addEventListener("mouseleave",handleCanvasPointerUp);else{let e=null;canvas.addEventListener("touchstart",t=>{if(!pointerIsDown){const a=t.changedTouches[0];e=a.identifier,handleCanvasPointerDown(a.clientX,a.clientY)}}),canvas.addEventListener("touchend",t=>{for(let a of t.changedTouches)if(a.identifier===e){handleCanvasPointerUp();break}}),canvas.addEventListener("touchmove",t=>{for(let a of t.changedTouches)if(a.identifier===e){handleCanvasPointerMove(a.clientX,a.clientY),t.preventDefault();break}},{passive:!1})}setupCanvases();